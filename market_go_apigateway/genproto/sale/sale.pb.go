// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.6
// source: sale.proto

package sale

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeId string `protobuf:"bytes,1,opt,name=change_id,json=changeId,proto3" json:"change_id"`
	SaleId   string `protobuf:"bytes,2,opt,name=sale_id,json=saleId,proto3" json:"sale_id"`
	BranchId string `protobuf:"bytes,3,opt,name=branch_id,json=branchId,proto3" json:"branch_id"`
}

func (x *Sold) Reset() {
	*x = Sold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sold) ProtoMessage() {}

func (x *Sold) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sold.ProtoReflect.Descriptor instead.
func (*Sold) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{0}
}

func (x *Sold) GetChangeId() string {
	if x != nil {
		return x.ChangeId
	}
	return ""
}

func (x *Sold) GetSaleId() string {
	if x != nil {
		return x.SaleId
	}
	return ""
}

func (x *Sold) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type SaleCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SaleId     string `protobuf:"bytes,1,opt,name=sale_id,json=saleId,proto3" json:"sale_id"`
	Shtrihcode string `protobuf:"bytes,2,opt,name=shtrihcode,proto3" json:"shtrihcode"`
}

func (x *SaleCode) Reset() {
	*x = SaleCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleCode) ProtoMessage() {}

func (x *SaleCode) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleCode.ProtoReflect.Descriptor instead.
func (*SaleCode) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{1}
}

func (x *SaleCode) GetSaleId() string {
	if x != nil {
		return x.SaleId
	}
	return ""
}

func (x *SaleCode) GetShtrihcode() string {
	if x != nil {
		return x.Shtrihcode
	}
	return ""
}

type Sale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Guid            string `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid"`
	ChangeId        string `protobuf:"bytes,3,opt,name=change_id,json=changeId,proto3" json:"change_id"`
	BranchId        string `protobuf:"bytes,4,opt,name=branch_id,json=branchId,proto3" json:"branch_id"`
	EmployeesId     string `protobuf:"bytes,5,opt,name=employees_id,json=employeesId,proto3" json:"employees_id"`
	MagazineId      string `protobuf:"bytes,6,opt,name=magazine_id,json=magazineId,proto3" json:"magazine_id"`
	SalePaymentId   string `protobuf:"bytes,7,opt,name=sale_payment_id,json=salePaymentId,proto3" json:"sale_payment_id"`
	Status          int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status"`
	SummAllProducts int64  `protobuf:"varint,9,opt,name=summ_all_products,json=summAllProducts,proto3" json:"summ_all_products"`
}

func (x *Sale) Reset() {
	*x = Sale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sale) ProtoMessage() {}

func (x *Sale) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sale.ProtoReflect.Descriptor instead.
func (*Sale) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{2}
}

func (x *Sale) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Sale) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *Sale) GetChangeId() string {
	if x != nil {
		return x.ChangeId
	}
	return ""
}

func (x *Sale) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *Sale) GetEmployeesId() string {
	if x != nil {
		return x.EmployeesId
	}
	return ""
}

func (x *Sale) GetMagazineId() string {
	if x != nil {
		return x.MagazineId
	}
	return ""
}

func (x *Sale) GetSalePaymentId() string {
	if x != nil {
		return x.SalePaymentId
	}
	return ""
}

func (x *Sale) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Sale) GetSummAllProducts() int64 {
	if x != nil {
		return x.SummAllProducts
	}
	return 0
}

type SaleProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	CategoryId      string `protobuf:"bytes,2,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	Name            string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Shtrihcode      string `protobuf:"bytes,4,opt,name=shtrihcode,proto3" json:"shtrihcode"`
	CountBuy        int64  `protobuf:"varint,5,opt,name=count_buy,json=countBuy,proto3" json:"count_buy"`
	CountSklad      int64  `protobuf:"varint,6,opt,name=count_sklad,json=countSklad,proto3" json:"count_sklad"`
	IsBlockedSkidka bool   `protobuf:"varint,7,opt,name=is_blocked_skidka,json=isBlockedSkidka,proto3" json:"is_blocked_skidka"`
	SkidkaType      int32  `protobuf:"varint,8,opt,name=skidka_type,json=skidkaType,proto3" json:"skidka_type"`
	Price           int32  `protobuf:"varint,9,opt,name=price,proto3" json:"price"`
	SaleId          string `protobuf:"bytes,10,opt,name=sale_id,json=saleId,proto3" json:"sale_id"`
	SkidkaPrice     int32  `protobuf:"varint,11,opt,name=skidka_price,json=skidkaPrice,proto3" json:"skidka_price"`
}

func (x *SaleProducts) Reset() {
	*x = SaleProducts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleProducts) ProtoMessage() {}

func (x *SaleProducts) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleProducts.ProtoReflect.Descriptor instead.
func (*SaleProducts) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{3}
}

func (x *SaleProducts) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SaleProducts) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *SaleProducts) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaleProducts) GetShtrihcode() string {
	if x != nil {
		return x.Shtrihcode
	}
	return ""
}

func (x *SaleProducts) GetCountBuy() int64 {
	if x != nil {
		return x.CountBuy
	}
	return 0
}

func (x *SaleProducts) GetCountSklad() int64 {
	if x != nil {
		return x.CountSklad
	}
	return 0
}

func (x *SaleProducts) GetIsBlockedSkidka() bool {
	if x != nil {
		return x.IsBlockedSkidka
	}
	return false
}

func (x *SaleProducts) GetSkidkaType() int32 {
	if x != nil {
		return x.SkidkaType
	}
	return 0
}

func (x *SaleProducts) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SaleProducts) GetSaleId() string {
	if x != nil {
		return x.SaleId
	}
	return ""
}

func (x *SaleProducts) GetSkidkaPrice() int32 {
	if x != nil {
		return x.SkidkaPrice
	}
	return 0
}

type SalectCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeId        string `protobuf:"bytes,1,opt,name=change_id,json=changeId,proto3" json:"change_id"`
	BranchId        string `protobuf:"bytes,2,opt,name=branch_id,json=branchId,proto3" json:"branch_id"`
	EmployeesId     string `protobuf:"bytes,3,opt,name=employees_id,json=employeesId,proto3" json:"employees_id"`
	MagazineId      string `protobuf:"bytes,4,opt,name=magazine_id,json=magazineId,proto3" json:"magazine_id"`
	Status          int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status"`
	SummAllProducts int64  `protobuf:"varint,6,opt,name=summ_all_products,json=summAllProducts,proto3" json:"summ_all_products"`
}

func (x *SalectCreate) Reset() {
	*x = SalectCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalectCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalectCreate) ProtoMessage() {}

func (x *SalectCreate) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalectCreate.ProtoReflect.Descriptor instead.
func (*SalectCreate) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{4}
}

func (x *SalectCreate) GetChangeId() string {
	if x != nil {
		return x.ChangeId
	}
	return ""
}

func (x *SalectCreate) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *SalectCreate) GetEmployeesId() string {
	if x != nil {
		return x.EmployeesId
	}
	return ""
}

func (x *SalectCreate) GetMagazineId() string {
	if x != nil {
		return x.MagazineId
	}
	return ""
}

func (x *SalectCreate) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SalectCreate) GetSummAllProducts() int64 {
	if x != nil {
		return x.SummAllProducts
	}
	return 0
}

type SaleProductsCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId      string `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Shtrihcode      string `protobuf:"bytes,3,opt,name=shtrihcode,proto3" json:"shtrihcode"`
	CountBuy        int64  `protobuf:"varint,4,opt,name=count_buy,json=countBuy,proto3" json:"count_buy"`
	IsBlockedSkidka bool   `protobuf:"varint,5,opt,name=is_blocked_skidka,json=isBlockedSkidka,proto3" json:"is_blocked_skidka"`
	SkidkaType      int32  `protobuf:"varint,6,opt,name=skidka_type,json=skidkaType,proto3" json:"skidka_type"`
	SaleId          string `protobuf:"bytes,7,opt,name=sale_id,json=saleId,proto3" json:"sale_id"`
	SkidkaPrice     int32  `protobuf:"varint,8,opt,name=skidka_price,json=skidkaPrice,proto3" json:"skidka_price"`
}

func (x *SaleProductsCreate) Reset() {
	*x = SaleProductsCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleProductsCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleProductsCreate) ProtoMessage() {}

func (x *SaleProductsCreate) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleProductsCreate.ProtoReflect.Descriptor instead.
func (*SaleProductsCreate) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{5}
}

func (x *SaleProductsCreate) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *SaleProductsCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaleProductsCreate) GetShtrihcode() string {
	if x != nil {
		return x.Shtrihcode
	}
	return ""
}

func (x *SaleProductsCreate) GetCountBuy() int64 {
	if x != nil {
		return x.CountBuy
	}
	return 0
}

func (x *SaleProductsCreate) GetIsBlockedSkidka() bool {
	if x != nil {
		return x.IsBlockedSkidka
	}
	return false
}

func (x *SaleProductsCreate) GetSkidkaType() int32 {
	if x != nil {
		return x.SkidkaType
	}
	return 0
}

func (x *SaleProductsCreate) GetSaleId() string {
	if x != nil {
		return x.SaleId
	}
	return ""
}

func (x *SaleProductsCreate) GetSkidkaPrice() int32 {
	if x != nil {
		return x.SkidkaPrice
	}
	return 0
}

type PayTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Summ    int64  `protobuf:"varint,2,opt,name=summ,proto3" json:"summ"`
	Cash    int64  `protobuf:"varint,3,opt,name=cash,proto3" json:"cash"`
	Uzcard  int64  `protobuf:"varint,4,opt,name=uzcard,proto3" json:"uzcard"`
	Payme   int64  `protobuf:"varint,5,opt,name=payme,proto3" json:"payme"`
	Click   int64  `protobuf:"varint,6,opt,name=click,proto3" json:"click"`
	Humo    int64  `protobuf:"varint,7,opt,name=humo,proto3" json:"humo"`
	Apelsin int64  `protobuf:"varint,8,opt,name=apelsin,proto3" json:"apelsin"`
	SaleId  string `protobuf:"bytes,9,opt,name=sale_id,json=saleId,proto3" json:"sale_id"`
}

func (x *PayTypes) Reset() {
	*x = PayTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayTypes) ProtoMessage() {}

func (x *PayTypes) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayTypes.ProtoReflect.Descriptor instead.
func (*PayTypes) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{6}
}

func (x *PayTypes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PayTypes) GetSumm() int64 {
	if x != nil {
		return x.Summ
	}
	return 0
}

func (x *PayTypes) GetCash() int64 {
	if x != nil {
		return x.Cash
	}
	return 0
}

func (x *PayTypes) GetUzcard() int64 {
	if x != nil {
		return x.Uzcard
	}
	return 0
}

func (x *PayTypes) GetPayme() int64 {
	if x != nil {
		return x.Payme
	}
	return 0
}

func (x *PayTypes) GetClick() int64 {
	if x != nil {
		return x.Click
	}
	return 0
}

func (x *PayTypes) GetHumo() int64 {
	if x != nil {
		return x.Humo
	}
	return 0
}

func (x *PayTypes) GetApelsin() int64 {
	if x != nil {
		return x.Apelsin
	}
	return 0
}

func (x *PayTypes) GetSaleId() string {
	if x != nil {
		return x.SaleId
	}
	return ""
}

type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{7}
}

func (x *GetListRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sales      []*Sale `protobuf:"bytes,1,rep,name=sales,proto3" json:"sales"`
	TotalCount int64   `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{8}
}

func (x *GetListResponse) GetSales() []*Sale {
	if x != nil {
		return x.Sales
	}
	return nil
}

func (x *GetListResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetListSaleProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SaleProducts []*SaleProducts `protobuf:"bytes,1,rep,name=saleProducts,proto3" json:"saleProducts"`
	TotalCount   int64           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count"`
}

func (x *GetListSaleProductsResponse) Reset() {
	*x = GetListSaleProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListSaleProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListSaleProductsResponse) ProtoMessage() {}

func (x *GetListSaleProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListSaleProductsResponse.ProtoReflect.Descriptor instead.
func (*GetListSaleProductsResponse) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{9}
}

func (x *GetListSaleProductsResponse) GetSaleProducts() []*SaleProducts {
	if x != nil {
		return x.SaleProducts
	}
	return nil
}

func (x *GetListSaleProductsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type Pkey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *Pkey) Reset() {
	*x = Pkey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pkey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pkey) ProtoMessage() {}

func (x *Pkey) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pkey.ProtoReflect.Descriptor instead.
func (*Pkey) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{10}
}

func (x *Pkey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sale_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_sale_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_sale_proto_rawDescGZIP(), []int{11}
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_sale_proto protoreflect.FileDescriptor

var file_sale_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x61,
	0x6c, 0x65, 0x22, 0x59, 0x0a, 0x04, 0x53, 0x6f, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x43, 0x0a,
	0x08, 0x53, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x61, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x74, 0x72, 0x69, 0x68, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x74, 0x72, 0x69, 0x68, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x75, 0x6d, 0x6d, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x75, 0x6d, 0x6d, 0x41, 0x6c,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0xd0, 0x02, 0x0a, 0x0c, 0x53, 0x61,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x74, 0x72, 0x69, 0x68, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x74, 0x72, 0x69, 0x68, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x75, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x6c, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6b, 0x6c, 0x61, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x69, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x64,
	0x6b, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x53, 0x6b, 0x69, 0x64, 0x6b, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69,
	0x64, 0x6b, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x6b, 0x69, 0x64, 0x6b, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x69,
	0x64, 0x6b, 0x61, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x6b, 0x69, 0x64, 0x6b, 0x61, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xd0, 0x01, 0x0a,
	0x0c, 0x53, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x61, 0x67, 0x61, 0x7a, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x6d, 0x6d, 0x5f, 0x61, 0x6c, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x73, 0x75, 0x6d, 0x6d, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22,
	0x8f, 0x02, 0x0a, 0x12, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x68, 0x74, 0x72, 0x69, 0x68, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x68, 0x74, 0x72, 0x69, 0x68, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x75, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x64, 0x6b, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x6b,
	0x69, 0x64, 0x6b, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x64, 0x6b, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x64, 0x6b,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x64, 0x6b, 0x61, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x64, 0x6b, 0x61, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0xcd, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x75, 0x6d, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x75,
	0x6d, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x7a, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x7a, 0x63, 0x61, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x75,
	0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x68, 0x75, 0x6d, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x70, 0x65, 0x6c, 0x73, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x70, 0x65, 0x6c, 0x73, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x61,
	0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x76, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x16, 0x0a, 0x04, 0x50, 0x6b, 0x65, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x24, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xeb, 0x01, 0x0a, 0x0b, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12,
	0x14, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x23,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0a, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x2e, 0x50, 0x6b, 0x65, 0x79, 0x1a, 0x0a, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e,
	0x73, 0x61, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x1a, 0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0a, 0x2e,
	0x73, 0x61, 0x6c, 0x65, 0x2e, 0x50, 0x6b, 0x65, 0x79, 0x1a, 0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x1a, 0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0x9f, 0x03, 0x0a, 0x13, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x14, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x61,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0a, 0x2e, 0x73, 0x61,
	0x6c, 0x65, 0x2e, 0x50, 0x6b, 0x65, 0x79, 0x1a, 0x12, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x53,
	0x61, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x53,
	0x61, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x1a, 0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0a, 0x2e,
	0x73, 0x61, 0x6c, 0x65, 0x2e, 0x50, 0x6b, 0x65, 0x79, 0x1a, 0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x1a, 0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x50, 0x61,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64,
	0x61, 0x6a, 0x61, 0x12, 0x0a, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x53, 0x6f, 0x6c, 0x64, 0x1a,
	0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x2e, 0x53, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x18, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x2e, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sale_proto_rawDescOnce sync.Once
	file_sale_proto_rawDescData = file_sale_proto_rawDesc
)

func file_sale_proto_rawDescGZIP() []byte {
	file_sale_proto_rawDescOnce.Do(func() {
		file_sale_proto_rawDescData = protoimpl.X.CompressGZIP(file_sale_proto_rawDescData)
	})
	return file_sale_proto_rawDescData
}

var file_sale_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_sale_proto_goTypes = []interface{}{
	(*Sold)(nil),                        // 0: sale.Sold
	(*SaleCode)(nil),                    // 1: sale.SaleCode
	(*Sale)(nil),                        // 2: sale.Sale
	(*SaleProducts)(nil),                // 3: sale.SaleProducts
	(*SalectCreate)(nil),                // 4: sale.SalectCreate
	(*SaleProductsCreate)(nil),          // 5: sale.SaleProductsCreate
	(*PayTypes)(nil),                    // 6: sale.PayTypes
	(*GetListRequest)(nil),              // 7: sale.GetListRequest
	(*GetListResponse)(nil),             // 8: sale.GetListResponse
	(*GetListSaleProductsResponse)(nil), // 9: sale.GetListSaleProductsResponse
	(*Pkey)(nil),                        // 10: sale.Pkey
	(*Response)(nil),                    // 11: sale.Response
}
var file_sale_proto_depIdxs = []int32{
	2,  // 0: sale.GetListResponse.sales:type_name -> sale.Sale
	3,  // 1: sale.GetListSaleProductsResponse.saleProducts:type_name -> sale.SaleProducts
	7,  // 2: sale.SaleService.GetAll:input_type -> sale.GetListRequest
	10, // 3: sale.SaleService.GetById:input_type -> sale.Pkey
	4,  // 4: sale.SaleService.Create:input_type -> sale.SalectCreate
	10, // 5: sale.SaleService.Delete:input_type -> sale.Pkey
	2,  // 6: sale.SaleService.Update:input_type -> sale.Sale
	7,  // 7: sale.SaleProductsService.GetAll:input_type -> sale.GetListRequest
	10, // 8: sale.SaleProductsService.GetById:input_type -> sale.Pkey
	5,  // 9: sale.SaleProductsService.Create:input_type -> sale.SaleProductsCreate
	10, // 10: sale.SaleProductsService.Delete:input_type -> sale.Pkey
	3,  // 11: sale.SaleProductsService.Update:input_type -> sale.SaleProducts
	6,  // 12: sale.SaleProductsService.PayType:input_type -> sale.PayTypes
	0,  // 13: sale.SaleProductsService.Prodaja:input_type -> sale.Sold
	1,  // 14: sale.SaleProductsService.Code:input_type -> sale.SaleCode
	8,  // 15: sale.SaleService.GetAll:output_type -> sale.GetListResponse
	2,  // 16: sale.SaleService.GetById:output_type -> sale.Sale
	11, // 17: sale.SaleService.Create:output_type -> sale.Response
	11, // 18: sale.SaleService.Delete:output_type -> sale.Response
	11, // 19: sale.SaleService.Update:output_type -> sale.Response
	9,  // 20: sale.SaleProductsService.GetAll:output_type -> sale.GetListSaleProductsResponse
	3,  // 21: sale.SaleProductsService.GetById:output_type -> sale.SaleProducts
	11, // 22: sale.SaleProductsService.Create:output_type -> sale.Response
	11, // 23: sale.SaleProductsService.Delete:output_type -> sale.Response
	11, // 24: sale.SaleProductsService.Update:output_type -> sale.Response
	11, // 25: sale.SaleProductsService.PayType:output_type -> sale.Response
	11, // 26: sale.SaleProductsService.Prodaja:output_type -> sale.Response
	5,  // 27: sale.SaleProductsService.Code:output_type -> sale.SaleProductsCreate
	15, // [15:28] is the sub-list for method output_type
	2,  // [2:15] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_sale_proto_init() }
func file_sale_proto_init() {
	if File_sale_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sale_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleProducts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalectCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleProductsCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListSaleProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pkey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sale_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sale_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_sale_proto_goTypes,
		DependencyIndexes: file_sale_proto_depIdxs,
		MessageInfos:      file_sale_proto_msgTypes,
	}.Build()
	File_sale_proto = out.File
	file_sale_proto_rawDesc = nil
	file_sale_proto_goTypes = nil
	file_sale_proto_depIdxs = nil
}
